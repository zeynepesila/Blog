{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'Admin',\n  data() {\n    return {\n      posts: []\n    };\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('/api/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.posts = response.data;\n      } catch (error) {\n        console.error('Yazılar alınamadı', error);\n      }\n    },\n    async deletePost(postId) {\n      if (!confirm('Bu yazıyı silmek istediğinize emin misiniz?')) return;\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`/api/posts/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.fetchPosts(); // Güncelle\n      } catch (error) {\n        console.error('Yazı silinemedi', error);\n      }\n    },\n    async deleteComment(commentId) {\n      if (!confirm('Bu yorumu silmek istediğinize emin misiniz?')) return;\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`/api/comments/${commentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.fetchPosts(); // Güncelle\n      } catch (error) {\n        console.error('Yorum silinemedi', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","posts","mounted","fetchPosts","methods","token","localStorage","getItem","response","get","headers","Authorization","error","console","deletePost","postId","confirm","delete","deleteComment","commentId"],"sources":["C:\\Users\\Zeynep Esila\\OneDrive\\Desktop\\Blog\\blog-frontend\\src\\views\\Admin.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-panel\">\r\n    <h1>Admin Paneli</h1>\r\n\r\n    <h2>Yazılar</h2>\r\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\r\n      <h3>{{ post.title }}</h3>\r\n      <p><em>{{ post.summary }}</em></p>\r\n\r\n      <button @click=\"deletePost(post.id)\">Yazıyı Sil</button>\r\n\r\n      <div class=\"comments\">\r\n        <h4>Yorumlar</h4>\r\n        <ul>\r\n          <li v-for=\"comment in post.comments\" :key=\"comment.id\">\r\n            {{ comment.authorName }}: {{ comment.content }}\r\n            <button @click=\"deleteComment(comment.id)\">Sil</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Admin',\r\n  data() {\r\n    return {\r\n      posts: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPosts()\r\n  },\r\n  methods: {\r\n    async fetchPosts() {\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        const response = await axios.get('/api/posts', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        this.posts = response.data\r\n      } catch (error) {\r\n        console.error('Yazılar alınamadı', error)\r\n      }\r\n    },\r\n    async deletePost(postId) {\r\n      if (!confirm('Bu yazıyı silmek istediğinize emin misiniz?')) return\r\n\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        await axios.delete(`/api/posts/${postId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        this.fetchPosts() // Güncelle\r\n      } catch (error) {\r\n        console.error('Yazı silinemedi', error)\r\n      }\r\n    },\r\n    async deleteComment(commentId) {\r\n      if (!confirm('Bu yorumu silmek istediğinize emin misiniz?')) return\r\n\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        await axios.delete(`/api/comments/${commentId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        this.fetchPosts() // Güncelle\r\n      } catch (error) {\r\n        console.error('Yorum silinemedi', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.admin-panel {\r\n  padding: 20px;\r\n}\r\n.post {\r\n  border: 1px solid #bbb;\r\n  padding: 15px;\r\n  margin-bottom: 25px;\r\n  border-radius: 5px;\r\n}\r\n.comments {\r\n  margin-top: 10px;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,YAAY,EAAE;UAC7CC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC;QACD,IAAI,CAACJ,KAAI,GAAIO,QAAQ,CAACR,IAAG;MAC3B,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK;MAC1C;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,MAAM,EAAE;MACvB,IAAI,CAACC,OAAO,CAAC,6CAA6C,CAAC,EAAE;MAE7D,IAAI;QACF,MAAMX,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,MAAMT,KAAK,CAACmB,MAAM,CAAC,cAAcF,MAAM,EAAE,EAAE;UACzCL,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC;QACD,IAAI,CAACF,UAAU,CAAC,GAAE;MACpB,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK;MACxC;IACF,CAAC;IACD,MAAMM,aAAaA,CAACC,SAAS,EAAE;MAC7B,IAAI,CAACH,OAAO,CAAC,6CAA6C,CAAC,EAAE;MAE7D,IAAI;QACF,MAAMX,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,MAAMT,KAAK,CAACmB,MAAM,CAAC,iBAAiBE,SAAS,EAAE,EAAE;UAC/CT,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC;QACD,IAAI,CAACF,UAAU,CAAC,GAAE;MACpB,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK;MACzC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}