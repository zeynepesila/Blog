{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-panel\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"comments\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Admin Paneli\", -1 /* CACHED */)), _cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Yazılar\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id,\n      class: \"post\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, [_createElementVNode(\"em\", null, _toDisplayString(post.summary), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      onClick: $event => $options.deletePost(post.id)\n    }, \"Yazıyı Sil\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"h4\", null, \"Yorumlar\", -1 /* CACHED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(post.comments, comment => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: comment.id\n      }, [_createTextVNode(_toDisplayString(comment.authorName) + \": \" + _toDisplayString(comment.content) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n        onClick: $event => $options.deleteComment(comment.id)\n      }, \"Sil\", 8 /* PROPS */, _hoisted_4)]);\n    }), 128 /* KEYED_FRAGMENT */))])])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","posts","post","key","id","_toDisplayString","title","summary","onClick","$event","$options","deletePost","_hoisted_2","_hoisted_3","comments","comment","authorName","content","deleteComment","_hoisted_4"],"sources":["C:\\Users\\Zeynep Esila\\OneDrive\\Desktop\\Blog\\blog-frontend\\src\\views\\Admin.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-panel\">\r\n    <h1>Admin Paneli</h1>\r\n\r\n    <h2>Yazılar</h2>\r\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\r\n      <h3>{{ post.title }}</h3>\r\n      <p><em>{{ post.summary }}</em></p>\r\n\r\n      <button @click=\"deletePost(post.id)\">Yazıyı Sil</button>\r\n\r\n      <div class=\"comments\">\r\n        <h4>Yorumlar</h4>\r\n        <ul>\r\n          <li v-for=\"comment in post.comments\" :key=\"comment.id\">\r\n            {{ comment.authorName }}: {{ comment.content }}\r\n            <button @click=\"deleteComment(comment.id)\">Sil</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Admin',\r\n  data() {\r\n    return {\r\n      posts: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPosts()\r\n  },\r\n  methods: {\r\n    async fetchPosts() {\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        const response = await axios.get('/api/posts', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        this.posts = response.data\r\n      } catch (error) {\r\n        console.error('Yazılar alınamadı', error)\r\n      }\r\n    },\r\n    async deletePost(postId) {\r\n      if (!confirm('Bu yazıyı silmek istediğinize emin misiniz?')) return\r\n\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        await axios.delete(`/api/posts/${postId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        this.fetchPosts() // Güncelle\r\n      } catch (error) {\r\n        console.error('Yazı silinemedi', error)\r\n      }\r\n    },\r\n    async deleteComment(commentId) {\r\n      if (!confirm('Bu yorumu silmek istediğinize emin misiniz?')) return\r\n\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        await axios.delete(`/api/comments/${commentId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        this.fetchPosts() // Güncelle\r\n      } catch (error) {\r\n        console.error('Yorum silinemedi', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.admin-panel {\r\n  padding: 20px;\r\n}\r\n.post {\r\n  border: 1px solid #bbb;\r\n  padding: 15px;\r\n  margin-bottom: 25px;\r\n  border-radius: 5px;\r\n}\r\n.comments {\r\n  margin-top: 10px;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;;EAUfA,KAAK,EAAC;AAAU;;;uBAVzBC,mBAAA,CAoBM,OApBNC,UAoBM,G,0BAnBJC,mBAAA,CAAqB,YAAjB,cAAY,qB,0BAEhBA,mBAAA,CAAgB,YAAZ,SAAO,sB,kBACXF,mBAAA,CAeMG,SAAA,QAAAC,WAAA,CAfcC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBP,mBAAA,CAeM;MAfsBQ,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEV,KAAK,EAAC;QAC9CG,mBAAA,CAAyB,YAAAQ,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBT,mBAAA,CAAkC,YAA/BA,mBAAA,CAA2B,YAAAQ,gBAAA,CAApBH,IAAI,CAACK,OAAO,iB,GAEtBV,mBAAA,CAAwD;MAA/CW,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACT,IAAI,CAACE,EAAE;OAAG,YAAU,iBAAAQ,UAAA,GAE/Cf,mBAAA,CAQM,OARNgB,UAQM,G,0BAPJhB,mBAAA,CAAiB,YAAb,UAAQ,qBACZA,mBAAA,CAKK,c,kBAJHF,mBAAA,CAGKG,SAAA,QAAAC,WAAA,CAHiBG,IAAI,CAACY,QAAQ,EAAxBC,OAAO;2BAAlBpB,mBAAA,CAGK;QAHiCQ,GAAG,EAAEY,OAAO,CAACX;4CAC9CW,OAAO,CAACC,UAAU,IAAG,IAAE,GAAAX,gBAAA,CAAGU,OAAO,CAACE,OAAO,IAAG,GAC/C,iBAAApB,mBAAA,CAAuD;QAA9CW,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAQ,aAAa,CAACH,OAAO,CAACX,EAAE;SAAG,KAAG,iBAAAe,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}