{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserHome',\n  data() {\n    return {\n      posts: [],\n      newComments: {}\n    };\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('/api/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.posts = response.data;\n      } catch (error) {\n        console.error('Postlar alınamadı', error);\n      }\n    },\n    async submitComment(postId) {\n      const content = this.newComments[postId];\n      if (!content) return;\n      try {\n        const token = localStorage.getItem('token');\n        await axios.post(`/api/posts/${postId}/comments`, {\n          content\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.newComments[postId] = '';\n        this.fetchPosts(); // Yorumları güncelle\n      } catch (error) {\n        console.error('Yorum gönderilemedi', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","posts","newComments","mounted","fetchPosts","methods","token","localStorage","getItem","response","get","headers","Authorization","error","console","submitComment","postId","content","post"],"sources":["C:\\Users\\Zeynep Esila\\OneDrive\\Desktop\\Blog\\blog-frontend\\src\\views\\UserHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-home\">\r\n    <h1>Yazılar</h1>\r\n\r\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\r\n      <h2>{{ post.title }}</h2>\r\n      <p><em>{{ post.summary }}</em></p>\r\n\r\n      <!-- Yorumlar Listesi -->\r\n      <div class=\"comments\">\r\n        <h4>Yorumlar:</h4>\r\n        <ul>\r\n          <li v-for=\"comment in post.comments\" :key=\"comment.id\">\r\n            <strong>{{ comment.authorName }}:</strong> {{ comment.content }}\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- Yeni Yorum Formu -->\r\n        <form @submit.prevent=\"submitComment(post.id)\">\r\n          <input\r\n            v-model=\"newComments[post.id]\"\r\n            placeholder=\"Yorum yaz...\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Gönder</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserHome',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      newComments: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPosts()\r\n  },\r\n  methods: {\r\n    async fetchPosts() {\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        const response = await axios.get('/api/posts', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        this.posts = response.data\r\n      } catch (error) {\r\n        console.error('Postlar alınamadı', error)\r\n      }\r\n    },\r\n    async submitComment(postId) {\r\n      const content = this.newComments[postId]\r\n      if (!content) return\r\n\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n        await axios.post(`/api/posts/${postId}/comments`, { content }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n\r\n        this.newComments[postId] = ''\r\n        this.fetchPosts()  // Yorumları güncelle\r\n      } catch (error) {\r\n        console.error('Yorum gönderilemedi', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-home {\r\n  padding: 20px;\r\n}\r\n.post {\r\n  margin-bottom: 30px;\r\n  border: 1px solid #ddd;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n}\r\n.comments {\r\n  margin-top: 15px;\r\n}\r\ninput {\r\n  padding: 5px;\r\n  margin-right: 5px;\r\n  width: 70%;\r\n}\r\nbutton {\r\n  padding: 5px 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,CAAC;IAChB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,YAAY,EAAE;UAC7CC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC;QACD,IAAI,CAACL,KAAI,GAAIQ,QAAQ,CAACT,IAAG;MAC3B,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK;MAC1C;IACF,CAAC;IACD,MAAME,aAAaA,CAACC,MAAM,EAAE;MAC1B,MAAMC,OAAM,GAAI,IAAI,CAACf,WAAW,CAACc,MAAM;MACvC,IAAI,CAACC,OAAO,EAAE;MAEd,IAAI;QACF,MAAMX,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,MAAMV,KAAK,CAACoB,IAAI,CAAC,cAAcF,MAAM,WAAW,EAAE;UAAEC;QAAQ,CAAC,EAAE;UAC7DN,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC;QAED,IAAI,CAACJ,WAAW,CAACc,MAAM,IAAI,EAAC;QAC5B,IAAI,CAACZ,UAAU,CAAC,GAAG;MACrB,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK;MAC5C;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}